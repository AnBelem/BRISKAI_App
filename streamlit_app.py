import streamlit as st


#Titulo

import streamlit as st
from PIL import Image


#img = Image.open("BRISKAI.jpg")

# display image using streamlit
# width is used to set the width of an image
#st.image(img, width=200)

# Configuraci√≥n de la p√°gina
#st.set_page_config(page_title="BRISK.AI", layout="wide")

# Inicializaci√≥n de datos
if "users" not in st.session_state:
    st.session_state["users"] = {"admin": "12345", "user": "password123"}  # Usuarios predeterminados
if "authenticated" not in st.session_state:
    st.session_state["authenticated"] = False
if "show_instructions" not in st.session_state:
    st.session_state["show_instructions"] = False
if "show_register" not in st.session_state:
    st.session_state["show_register"] = False

# Funci√≥n de inicio de sesi√≥n
def login():
    st.title("Inicio de Sesi√≥n")
    st.write("Por favor, introduce tus datos para acceder a la aplicaci√≥n.")

    username = st.text_input("Usuario:")
    password = st.text_input("Contrase√±a:", type="password")

    if st.button("Iniciar Sesi√≥n"):
        if username in st.session_state["users"] and password == st.session_state["users"][username]:
            st.session_state["authenticated"] = True
            st.session_state["show_instructions"] = True
            st.success("Inicio de sesi√≥n exitoso. Cargando las instrucciones...")
        else:
            st.error("Usuario o contrase√±a incorrectos.")

    if st.button("Registrarse"):
        st.session_state["show_register"] = True

# Funci√≥n de registro de usuario
def register():
    st.title("Registro de Usuario")
    st.write("Por favor, introduce los datos para crear una nueva cuenta.")

    new_username = st.text_input("Nuevo Usuario:")
    new_password = st.text_input("Nueva Contrase√±a:", type="password")
    confirm_password = st.text_input("Confirmar Contrase√±a:", type="password")

    if st.button("Registrarse"):
        if not new_username or not new_password:
            st.error("El nombre de usuario y la contrase√±a son obligatorios.")
        elif new_username in st.session_state["users"]:
            st.error("El nombre de usuario ya existe. Por favor, elige otro.")
        elif new_password != confirm_password:
            st.error("Las contrase√±as no coinciden.")
        else:
            # Registrar nuevo usuario
            st.session_state["users"][new_username] = new_password
            st.success("¬°Registro exitoso! Ahora puedes iniciar sesi√≥n.")
            st.session_state["show_register"] = False

    if st.button("Volver al inicio de sesi√≥n"):
        st.session_state["show_register"] = False

# P√°gina de instrucciones
def instructions():
    st.title("C√≥mo funciona la aplicaci√≥n")
    st.write("""
    Bienvenido a **BRISK.AI**. Aqu√≠ hay una breve gu√≠a para usar la aplicaci√≥n:
    
    1. **Selecciona un segmento predeterminado o introduce un PMID:** Proporciona el PMID el cual quieres resumir o elige uno de los segmentos predefinidos.
    2. **Configura los par√°metros:** Ajusta las opciones como tokens m√°ximos, temperatura, y el estilo del resumen (persona, idioma).
    3. **Haz clic en "Resumir":** Obt√©n tu texto simplificado y resumido basado en tus configuraciones.
    
    Haz clic en el bot√≥n de abajo para continuar a la aplicaci√≥n principal.
    """)

    if st.button("Ir a la Aplicaci√≥n Principal"):
        st.session_state["show_instructions"] = False

# Pantalla principal
def main_app():
    st.sidebar.button("Cerrar Sesi√≥n", on_click=lambda: st.session_state.update({"authenticated": False, "show_instructions": False}))
    st.title("BRISK.AI")
    st.subheader(f"Bienvenido a la aplicaci√≥n.")
    st.write("Biomedical :blue[text summarisation] and :blue[simplification] using GPT-3.5.")
    # Aqu√≠ va el resto de la l√≥gica de la pantalla principal

# Manejo del flujo de la aplicaci√≥n
if st.session_state["show_register"]:
    register()
elif not st.session_state["authenticated"]:
    login()
elif st.session_state["show_instructions"]:
    instructions()
else:
    main_app()


# T√≠tulo principal
#st.title("BRISK.AI")
#st.write(
#    "Biomedical :blue[text summarisation] and :blue[simplification] using GPT-3.5"
#)

#st.image("Images/Red_AE_mRNA.png", caption="Imagen subida desde GitHub", use_container_width=True)
col1, col2 = st.columns([2, 2])


#st.title("BRISK.AI")
#st.write(
#    "Biomedical :blue[text summarisation] and :blue[simplification] using GPT-3.5"
#)
# Secci√≥n de entrada de texto

with col1:
    st.subheader("Selecciona un segmento predefinido:")
    selected_option = st.selectbox("Elige una opci√≥n", ["Ninguna opci√≥n seleccionada", "Ivermectina", "HCQ"])
    
    st.text_input("O introduce un PMID (Identificador √önico de PubMed):")
    st.subheader("Configuraci√≥n de Resumen")
    max_tokens = st.slider("M√°ximo n√∫mero de tokens:", 200, 1000, 500, help="GPT no permite generar respuestas de cierta longitud, sino que finalizar√° cuando haya terminado una idea. Este valor simplemente cortar√° la generaci√≥n para evitar incurrir en costos elevados.")
    temperature = st.slider("Temperatura:", 0.0, 1.0, 0.2, step=0.01, help="La temperatura indica qu√© tan reproducibles ser√°n los resultados de GPT-3.5, donde 0 significa muy reproducible y 1 significa pr√°cticamente aleatorio.")

    st.selectbox("¬øC√≥mo deseas que se explique el texto?", [ "üßë Adolescente", "üë©‚Äçüíº Adulto", "üßë‚Äç‚öïÔ∏è Cl√≠nico profesional"], index=1)
    
    comparison_mode = st.checkbox(" Mostrar comparaci√≥n de resultados")

    st.selectbox("¬øEn qu√© idioma deseas el resultado?", ["EN", "DE", "FR", "IT", "ES", "JP"], index=0)

with col2:
   st.subheader("Introduce un texto para resumir:")
   input_text = st.text_area("Texto", height=200)
   
   # Bot√≥n de acci√≥n
   if st.button("¬°Resumir!"):
    if not input_text:
        st.error("Por favor, introduce un texto o selecciona una opci√≥n.")
    else:
        st.success("Resumen generado con √©xito.")
        st.write("Aqu√≠ aparecer√° tu resumen.")  # Puedes reemplazar esto con la integraci√≥n de un modelo
   st.selectbox("Red", ["Ninguna opci√≥n seleccionada", "Efectos Adversos en  vacuna mRNA", "Variante en  vacuna mRNA", "Comorbilidades en  vacuna mRNA", "Embarazo en  vacuna mRNA", "Caracter√≠sticas del virus en  vacuna mRNA", "G√©nero en  vacuna mRNA", "Efectos Adversos en  vacuna de vector", "Variante en  vacuna de vector", "Comorbilidades en  vacuna de vector", "Embarazo en  vacuna de vector", "Caracter√≠sticas del virus en  vacuna de vector", "G√©nero en  vacuna de vector"], index=0)

